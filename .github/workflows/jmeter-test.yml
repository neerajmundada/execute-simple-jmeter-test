name: Execute JMeter Test with Grafana

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  run-jmeter:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Install Docker Compose (ensuring it's available)
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Step 4: Start Grafana and InfluxDB using Docker Compose
    - name: Start Grafana and InfluxDB
      run: |
        docker-compose up -d
        echo "Waiting for Grafana to be ready..."
        sleep 30 # Wait for Grafana to initialize

    # Optional: Replace sleep with a readiness check
    # - name: Wait for Grafana to be ready
    #   run: |
    #     until curl -s http://localhost:3000 >/dev/null; do
    #       echo "Waiting for Grafana..."
    #       sleep 5
    #     done

    # Step 5: Run JMeter tests with Docker
    - name: Run JMeter Tests
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/jmeter \
          -v ${{ github.workspace }}/results:/results \
          -w /jmeter justb4/jmeter:5.5 \
          -n -t ./google_search.jmx -l ./results/results.jtl \
          -Jusers=1 \
          -Jiterations=5 \
          -Jconstant_time=1000 \
          -Jrandom_time=10000 \
          -Jrandom_time_variance=3000

    # Step 6: Generate JMeter HTML Report
    - name: Generate JMeter Report
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/jmeter \
          -v ${{ github.workspace }}/results:/results \
          -w /jmeter justb4/jmeter:5.5 \
          -g ./results/results.jtl -o ./results/report

    # Step 7: Upload HTML Report as artifact
    - name: Upload JMeter HTML Report
      uses: actions/upload-artifact@v3
      with:
        name: jmeter-report
        path: ./results/report
        retention-days: 8

    # Step 8: Stop Grafana and InfluxDB (after 2 minutes or default)
    - name: Stop Grafana and InfluxDB
      run: |
        echo "Shutting down Grafana and InfluxDB..."
        docker-compose down
