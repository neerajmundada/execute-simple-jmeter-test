name: Execute JMeter Test

on:
  workflow_dispatch:
    inputs:
      users:
        description: 'Number of users for the JMeter test. Max limit is 3 for this example'
        required: true
        default: 1
      iterations:
        description: 'Number of iterations for the JMeter test. Max limit is 3 for this example'
        required: true
        default: 1
      constant_time:
        description: 'Constant time in milliseconds'
        required: true
        default: 1000
      random_time:
        description: 'Random time in milliseconds'
        required: true
        default: 10000
      random_time_variance:
        description: 'Variance for random time in milliseconds'
        required: true
        default: 3000

jobs:
  run-jmeter:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Install Docker Compose (ensuring it's available)
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # Step 3.1: Restrict users and iterations input to a maximum of 3
    - name: Set users and iterations limits
      run: |
        users=${{ github.event.inputs.users }}
        iterations=${{ github.event.inputs.iterations }}
        
        # Restrict max users and iterations to 3
        if [ "$users" -gt 3 ]; then
          users=3
        fi
        if [ "$iterations" -gt 3 ]; then
          iterations=3
        fi
        
        echo "USERS: $users"
        echo "ITERATIONS: $iterations"
        
        echo "users=$users" >> $GITHUB_ENV
        echo "iterations=$iterations" >> $GITHUB_ENV

    # Step 4: Run JMeter tests with Docker
    - name: Run JMeter Tests
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/jmeter \
          -v ${{ github.workspace }}/results:/results \
          -w /jmeter justb4/jmeter:5.5 \
          -n -t ./google_search.jmx -l ./results/results.jtl \
          -Jusers=${{ github.event.inputs.users }} \
          -Jiterations=${{ github.event.inputs.iterations }} \
          -Jconstant_time=${{ github.event.inputs.constant_time }} \
          -Jrandom_time=${{ github.event.inputs.random_time }} \
          -Jrandom_time_variance=${{ github.event.inputs.random_time_variance }}

    # Step 5: Generate JMeter HTML Report
    - name: Generate JMeter Report
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/jmeter \
          -v ${{ github.workspace }}/results:/results \
          -w /jmeter justb4/jmeter:5.5 \
          -g ./results/results.jtl -o ./results/report

    # Step 6: Upload HTML Report as artifact
    - name: Upload JMeter HTML Report
      uses: actions/upload-artifact@v3
      with:
        name: jmeter-report
        path: ./results/report
        retention-days: 8
