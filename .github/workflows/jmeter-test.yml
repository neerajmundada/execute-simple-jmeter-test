name: JMeter Test with Grafana Monitoring

on:
  workflow_dispatch:
    inputs:
      users:
        description: 'Number of users'
        required: true
        default: 1
      iterations:
        description: 'Number of iterations per user'
        required: true
        default: 1
      constant_time:
        description: 'Constant time after iteration in milliseconds'
        required: true
        default: 1000
      random_time:
        description: 'Random time after transaction in milliseconds'
        required: true
        default: 10000
      random_time_variance:
        description: 'Variance of random time in milliseconds'
        required: true
        default: 3000
      grafana_timeout:
        description: 'Grafana shutdown time in minutes (default 2 minutes)'
        required: false
        default: 2

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start InfluxDB and Grafana
        run: |
          docker-compose up -d
          echo "Waiting for Grafana to be ready..."
          sleep 30 # Wait for services to initialize

      - name: Run JMeter Test
        run: |
          docker run --rm -v ${{ github.workspace }}:/jmeter -v ${{ github.workspace }}/results:/results -w /jmeter apache/jmeter:5.5 \
          -n -t ./google_search.jmx -l ./results/results.jtl \
          -Jusers=${{ github.event.inputs.users }} \
          -Jiterations=${{ github.event.inputs.iterations }} \
          -Jconstant_time=${{ github.event.inputs.constant_time }} \
          -Jrandom_time=${{ github.event.inputs.random_time }} \
          -Jrandom_time_variance=${{ github.event.inputs.random_time_variance }}

      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-results
          path: results/
          retention-days: 8

      - name: Wait for Grafana Timeout
        run: |
          echo "Monitoring Grafana for ${{ github.event.inputs.grafana_timeout }} minutes..."
          sleep $(( ${{ github.event.inputs.grafana_timeout }} * 60 ))

      - name: Shutdown Grafana and InfluxDB
        run: |
          echo "Shutting down Grafana and InfluxDB..."
          docker-compose down
